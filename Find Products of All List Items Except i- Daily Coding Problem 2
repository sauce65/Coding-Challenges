# Given an array of integers, return a new array such that each element at index i of the new array
# is the product of all the numbers in the
# original array except the one at i.

# For example, if our input was [1, 2, 3, 4, 5], the expected output would be [120, 60, 40, 30, 24].
#If our input was [3, 2, 1], the expected output would be [2, 3, 6].

#Follow-up: what if you can't use division?

def arr_prod():
    input_string = input("Enter a list numbers or separated by space: ")
    # User input to define the list of numbers, gets spat out as a single string
    userList = input_string.split()
    # Splits the input string at every whitespace, then stores each segment in a list object
    cleanList = [int(i) for i in userList]
    # List comprehension to convert every string segment into an integer
    result = []
    # Prepared empty list where answers will be held and reported
    for (x, y) in enumerate(sample):
    # Using enumerate() to check indices and avoid multiplying a number by itself
        product = 1
        # Variable which will store the products of all list items besides i, resets to 1 with every new i
        for (a, b) in enumerate(sample):
            if x == a:
                pass
            # If the indices are the same, we skip to the next iteration
            else:
                product *= b
            # If there is no index conflict, we find the product
        result.append(product)
        # When we have the product of all non-i list items, we append that to our results list
    print(result)
